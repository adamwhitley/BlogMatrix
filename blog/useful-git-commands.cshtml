@{
    Layout = "~/layouts/_BlogLayout.cshtml";

    // 00010.json
    var metadata = PostMetaData.GetPostMetaData(Server.MapPath("~/_postmetadata/00010.json"));
    
    Page.Title = metadata.title;
    Page.Meta_Description = metadata.meta_description;

    Page.ShowComments = true;

    string snippet_view = @"
<div class='editor-label'>
    @Html.LabelFor(model => model.StartDate)
</div>
<div class='editor-field'>
    @Html.EditorFor(model => model.StartDate)
    @Html.ValidationMessageFor(model => model.StartDate)
</div>";

    string snippet_editortemplate = @"
@model DateTime?
@{
    var value = '';
    if (Model.HasValue) {
        value = String.Format('{0:d}', Model.Value.ToString('dd/MM/yyyy'));
    }
}
@Html.TextBox('', value, new { @class = 'datefield', type = 'text' })";
}

<section id="page_title">
    
    <div class="page-header">
        <h2>@Page.Title</h2>
    </div>
</section>

<section id="page_content">
    <p class='lead'>Git is amazing, I love it. Sometimes though I forget the various commands to do things. Come on admit it... you do too :) Anyway here's my list of useful git commands. Enjoy!</p>

    <h4>Reset local branch to origin branch</h4>
<pre>git fetch origin
git reset --hard origin/[branch]</pre>

    <h4>Amend last committed message</h4>
<pre>git commit --amend -m "New commit message"</pre>

    <h4>Amend specific commit</h4>
<pre>git rebase [commit_hash] --interactive</pre>

    <h4>Amend multiple commits</h4>
<pre>git rebase -i HEAD~3
* ~3 means 3 commits</pre>

    <h4>Delete local and remote branch</h4>
<pre>git branch -d [branch]
git push origin :[branch]</pre>

    <h4>Abort pull</h4>
<pre>git reset --hard ORIG_HEAD</pre>

    <h4>Abort merge</h4>
<pre>git merge --abort</pre>

    <h4>Undo last commit and also unstage files</h4>
<pre>git reset HEAD~1</pre>

    <h4>Completely remove file from git history</h4>
<pre>git filter-branch --force --index-filter \ 
'git rm --cached --ignore-unmatch [file_name] l' \ 
--prune-empty --tag-name-filter cat -- --all

git push origin master --force</pre>

    <h4>Rename author in git history </h4>
    <p>Place the following in a shell script. Make sure to provide the correct email addresses for both <em>wrong@emailaddress.com</em> and <em>correct@emailaddress.com</em>.</p>
<pre>#!/bin/sh

git filter-branch -f --env-filter '

an="$GIT_AUTHOR_NAME"
am="$GIT_AUTHOR_EMAIL"
cn="$GIT_COMMITTER_NAME"
cm="$GIT_COMMITTER_EMAIL"

if [ "$GIT_COMMITTER_EMAIL" = "wrong@emailaddress.com" ]
then
    cm="correct@emailaddress.com"
fi
if [ "$GIT_AUTHOR_EMAIL" = "wrong@emailaddress.com" ]
then
    am="correct@emailaddress.com"
fi

export GIT_AUTHOR_NAME="$an"
export GIT_AUTHOR_EMAIL="$am"
export GIT_COMMITTER_NAME="$cn"
export GIT_COMMITTER_EMAIL="$cm"
'</pre>

<p>Then run:</p>
<pre>git push -f</pre>
    
    <h4>Undo last pull</h4>
<pre>git reset HEAD@@{1}</pre>

</section>


