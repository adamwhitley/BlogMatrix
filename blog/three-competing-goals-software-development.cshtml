@{
    // 00011.json
    Layout = "~/layouts/_BlogLayout.cshtml";
    Page.Title = "The Three Competing Goals of Software Development";
    Page.Meta_Description = "The three goals pillars of sofware development: time, money and features.";
    Page.ShowComments = true;
    Page.ShowSocialMedia = true;
}

<section id="page_title">
    <div class="page-header">
        <h2>@Page.Title</h2>
    </div>
</section>

<section id="page_content">
    <p class='lead'>Developing software is a rather complex task. Ask any developer. It's made even harder by the three competing goals of software development: Time, Money and Features.</p>
    
    <p>In an ideal world every software development project would be delivered on time, within budget and with all the features originally requested. Unfortunately this is very rarely the case.</p>
    
    <p>Developers know that delivering the holy trifecta of time, money and features all at the same time is <span style='text-decoration: line-through;'>hard</span> impossible. Why is this? The answer is simple. <strong>All three of these goals compete against each other.</strong></p>

    <p>The three goals create a negative perpetual cycle. More features means the project takes more time. More time means the project costs more money. More money means that the client wants more features. The cycle has now come full circle and repeats itself.</p>

    <p>To stop the cycle you need to lower your expectations to achieving only two of the goals. I suggest you look at features and time.</p>

    <h3>Why are features so important?</h3>
    
    <p>Features are the real drivers behind any software development project. If you can limit the feature set, you can deliver your project on time and enjoy the accolades of your colleagues and superiors :)</p>
    <p>Unfortunately most software projects throw every idea possible into the mix because "it must have this feature". Of course this results in a mammoth feature set and the project is doomed before it has even begun.</p>
    <p>A wiser way to determine the features required is to only pick the ones that will help achieve the primary purpose of the software. This should be no more than three main features!</p>
    <p>Got some obscure feature you think will be useful? Don't do it!  Once enough of your paying customers have asked for it reconsider whether you want to do it or not. Stay focused on the core features for the product!</p>
    
    <h3>Benefits of lowering expectations</h3>
    
    <p><strong>You will ship your software project.</strong></p>

    <p>Once your product has shipped you will quickly tell what is right, wrong or missing. I cannot stress how important and invaluable this information will be!</p>

    <p>By reducing your feature set and shipping on time you won't have wasted years developing a product then finding out you got it wrong or all those "must have features" are not even used. This will save you money, time and your sanity.</p>

    <p>You will also know exactly what you must do next for version 2 of your product.  Again you pick the 2-3 most important features and ship them. Then you will receive more information and a positive feedback cycle is starting to occur!</p>

    <p>Now you are cooking with gas!</p>

</section>


