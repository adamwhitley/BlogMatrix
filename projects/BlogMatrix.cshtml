@{
    Layout = "~/layouts/_BlogLayout.cshtml";

    // 00005.json
    var metadata = PostMetaData.GetPostMetaData(Server.MapPath("~/_postmetadata/00005.json"));
    
    Page.Title = metadata.title;
    Page.Meta_Description = metadata.meta_description;

    Page.ShowComments = true;
}

<section id="page_title">
    <div class="page-header">
        <h2>@Page.Title</h2>
    </div>
</section>

<section id="page_content">
    @RenderPage("/partials/_BlogMatrixSeries.cshtml")

    <p class='lead'>BlogMatrix is a very simple blog engine that I created. In fact the page you are reading right now was created with it. There's 
        no database, just pure HTML, CSS and jQuery. Read on to see how I did it.</p>
    
    <p>I'd always wanted to create my own blog engine purely for the heck of it and the geek factor.
     Over the years I wrote several versions
    with varying success but in the end I always lost steam as I switched to using the 'latest and greatest programming language'. Ruby on Rails, ASP.NET MVC, Sinatra and Nancy I tried them all. 
    Don't get me wrong they are all great tools but I was constantly getting bogged down in the technology.</p>

    <p>In the end I sat down and wrote out the bare essentials for my blog engine. This is what I came up with:</p>
    <ol>
        <li>Free hosting</li>
        <li>Uses git for deployment</li>
        <li>Makes use of layouts and partials</li>
        <li>Responsive design</li>
        
        
    </ol>

    <p>The solution I came up with was <b><a href="https://github.com/kestrelblackmore/BlogMatrix">BlogMatrix which you can view on GitHub</a></b>. 
        How simple is it you ask? Here are the solutions I ended up with.</p>

    <h3>1. Free hosting</h3>
    <p>The downside of using tools such as RoR, ASP.NET MVC or Node is that you have to host it on a specific environment and 
        unfortunately those environments always cost money if you want to use a custom domain name. Throw in a database and you are talking more costs.</p>
    <p>This meant I had to come up with a blog engine that would output pure HTML. Once you have pure HTML your hosting options increase significantly.</p>
    <p><b>Hosting Solution:</b> <a href="http://pages.github.com/" target="_blank">GitHub Pages</a>. By now I'm hoping you've heard of GitHub and are using it for hosting your projects. 
    What some people don't realise is that you can also use it for HTML hosting and <strong>it is free!</strong> <a href="http://pages.github.com/" target="_blank">Instructions on how to set this up are here</a>.</p>

    <h3>2. Uses git for deployment</h3>
    <p>I wanted the easiest deployment process possible. This ruled out such arcane methods as FTP, having to log onto the deployment server or configuring a complex deployment utility such as capistrano.</p>
    <p>My deployment process had to be as simple as: <code>git push</code>. Can't get much simpler than that!</p>
    <p><b>Deployment Solution:</b> <a href="http://pages.github.com/" target="_blank">Once again GitHub Pages</a>. Being created by GitHub obviously they allow you to deploy using git :)</p>

    <h3>3. Makes use of layouts and partials</h3>
    <p>I could have just marked everything up straight in HTML but this would become tedious if I needed to add a new menu item. I'd have to edit every single 
    HTML page to add it. Forget that!</p>
    <p><b>Layout Solution:</b> <a href="http://www.microsoft.com/web/webmatrix/">WebMatrix</a>. WebMatrix is a very simple web development tool which is similar in concept to PHP and classic ASP. 
        It provides some of the power of ASP.NET MVC (razor view engine, layouts etc) without the added bloat. <a href="http://tekpub.com/blogs/tekpub-free-bin/tagged/hacking-webmatrix">Here's an excellent tutorial series by Rob Conery at TekPub</a>.</p>

    <h3>4. Responsive design</h3>
    <p>Finally I wanted the blog to look good on any device whether it be a desktop, laptop or mobile device. I also didn't want to have to come up with
    my own custom CSS library as I'm not a web developer. I wanted a standardised grid system with access to all the new features you see on modern websites.</p>
    <p><b>Responsive Solution:</b> <a href="http://twitter.github.io/bootstrap/">Twitter Boostrap</a> with <a href="http://talkslab.github.io/metro-bootstrap/">Metro-Bootstrap Theme</a></b>.
    This was a no brainer. Twitter Bootstrap is an excellent HTML/CSS/jQuery framework with all the bells in whistles. It also has built in support for
        creating responsive design websites. I used the Metro-Bootstrap theme because I liked the look of it and flat design is 'so hot right now'.
    </p>

</section>


